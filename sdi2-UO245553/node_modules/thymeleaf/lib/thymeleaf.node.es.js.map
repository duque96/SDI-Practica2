{"version":3,"file":"thymeleaf.node.es.js","sources":["../source/parser/OptionalExpression.js","../source/parser/Rule.js","../source/parser/SequenceExpression.js","../source/standard/expressions/FragmentExpression.js","../source/standard/expressions/Identifier.js","../node_modules/@ultraq/object-utils/object-utils.js","../source/standard/expressions/VariableExpression.js","../source/standard/expressions/Iteration.js","../source/parser/InputBuffer.js","../source/parser/RegularExpressionMatchProcessor.js","../node_modules/@ultraq/array-utils/array-utils.js","../source/standard/expressions/LinkExpression.js","../source/standard/expressions/core/BooleanLiteral.js","../source/standard/expressions/core/NullLiteral.js","../source/standard/expressions/core/NumberLiteral.js","../source/standard/expressions/core/StringLiteral.js","../source/standard/expressions/core/TokenLiteral.js","../source/parser/OrderedChoiceExpression.js","../source/standard/expressions/core/Literal.js","../source/standard/expressions/core/Operand.js","../source/standard/expressions/LogicalExpression.js","../source/standard/expressions/Nothing.js","../source/standard/expressions/conditionals/Condition.js","../source/standard/expressions/conditionals/IfThenCondition.js","../source/standard/expressions/conditionals/IfThenElseCondition.js","../source/standard/expressions/ThymeleafExpression.js","../source/parser/Grammar.js","../source/standard/expressions/ThymeleafExpressionLanguage.js","../source/parser/Parser.js","../source/standard/expressions/ExpressionProcessor.js","../source/processors/AttributeProcessor.js","../node_modules/@ultraq/string-utils/string-utils.js","../source/standard/processors/AttrAttributeProcessor.js","../source/standard/processors/CheckedAttributeProcessor.js","../source/standard/processors/ClassAppendAttributeProcessor.js","../source/standard/processors/EachAttributeProcessor.js","../source/standard/processors/EmptyableAttributeProcessor.js","../source/standard/processors/FragmentAttributeProcessor.js","../source/utilities/Dom.js","../source/standard/processors/IfAttributeProcessor.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-runtime/regenerator/index.js","../node_modules/dumb-query-selector/dumb-query-selector.js","../source/standard/processors/InsertAttributeProcessor.js","../source/standard/processors/RemovableAttributeProcessor.js","../source/standard/processors/TextAttributeProcessor.js","../source/standard/processors/UTextAttributeProcessor.js","../source/dialects/Dialect.js","../source/standard/StandardDialect.js","../source/Configurations.js","../source/processors/Matcher.js","../source/utilities/Functions.js","../source/TemplateEngine.js","../source/Thymeleaf.js"],"sourcesContent":["/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An optional expression doesn't need to be included to be matched.  Thus,\n * optional expressions \"always\" match.\n * \n * @author Emanuel Rabina\n */\nexport default class OptionalExpression {\n\n\t/**\n\t * @param {Matchable} expression\n\t */\n\tconstructor(expression) {\n\n\t\tthis.expression = expression;\n\t}\n\n\t/**\n\t * Attempt to match the given expression.  If the expression isn't matched,\n\t * then carry on as normal.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Parser} parser\n\t * @return {Object}\n\t */\n\tmatch(input, parser) {\n\n\t\treturn input.markAndClearOrReset(() => {\n\t\t\tlet result = parser.parseWithExpression(input, this.expression);\n\t\t\treturn result !== null ? result : '';\n\t\t});\n\t}\n}\n","/*\n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Default processor which returns the result as is.\n * \n * @template T\n * @param {T} result\n * @return {T}\n */\nfunction defaultMatchProcessor(result) {\n\treturn result;\n}\n\n/**\n * A rule describes a string in the language.\n * \n * @author Emanuel Rabina\n */\nexport default class Rule {\n\n\t/**\n\t * @member {String}\n\t */\n\tname;\n\n\t/**\n\t * @member {Object\n\t */\n\texpression;\n\n\t/**\n\t * @param {String} name\n\t * @param {Object} expression\n\t * @param {Function} [matchProcessor=defaultExpressionAction]\n\t */\n\tconstructor(name, expression, matchProcessor = defaultMatchProcessor) {\n\n\t\tthis.name           = name;\n\t\tthis.expression     = expression;\n\t\tthis.matchProcessor = matchProcessor;\n\t}\n\n\t/**\n\t * Given an input string and a parser, return whether or not the input is\n\t * accepted by this rule.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Parser} parser\n\t * @return {Object} If the input is accepted, this will be the non-null result\n\t *   of matching against the rule.\n\t */\n\taccept(input, parser) {\n\n\t\tlet matchResult = parser.parseWithExpression(input, this.expression);\n\t\treturn matchResult !== null ? this.matchProcessor(matchResult) : null;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A sequence expression represents a series of expressions that must be matched\n * in order to consider the entire expression a match.\n * \n * @author Emanuel Rabina\n */\nexport default class SequenceExpression {\n\n\t/**\n\t * @param {...Matchable} expressions\n\t */\n\tconstructor(...expressions) {\n\n\t\tthis.expressions = expressions;\n\t}\n\n\t/**\n\t * Attempts to match each expression in order.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Parser} parser\n\t * @return {Array}\n\t */\n\tmatch(input, parser) {\n\n\t\treturn input.markAndClearOrReset(() => {\n\t\t\tlet results = [];\n\t\t\tfor (let expression of this.expressions) {\n\t\t\t\tlet result = input.markAndClearOrReset(() => {\n\t\t\t\t\treturn parser.parseWithExpression(input, expression);\n\t\t\t\t});\n\t\t\t\tif (result === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tresults.push(result);\n\t\t\t}\n\t\t\treturn results;\n\t\t});\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport OptionalExpression from '../../parser/OptionalExpression';\nimport Rule               from '../../parser/Rule';\nimport SequenceExpression from '../../parser/SequenceExpression';\n\n\nexport const TemplateName = new Rule('TemplateName',\n\t/[\\w-\\._]+/\n);\n\nexport const FragmentName = new Rule('FragmentName',\n\t/[\\w-\\._]+/\n);\n\n// TODO: We're not doing anything with these yet\nexport const FragmentParameters = new Rule('FragmentParameters',\n\tnew OptionalExpression(/\\(.+\\)/)\n);\n\n/**\n * Fragment expressions, `~{template :: fragment(parameters)}`.  A locator for a\n * piece of HTML in the same or another template.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('FragmentExpression',\n\tnew SequenceExpression(\n\t\t/~{/,\n\t\t'TemplateName',\n\t\t/::/,\n\t\t'FragmentName',\n\t\t'FragmentParameters',\n\t\t/}/\n\t),\n\t([, templateName, , fragmentName, parameters]) => context => {\n\n\t\t// TODO: Should executing a fragment expression should locate and return the\n\t\t//       fragment?  If so, then it'll make expression execution\n\t\t//       asynchronous!\n\t\treturn {\n\t\t\ttemplateName,\n\t\t\tfragmentName,\n\t\t\tparameters\n\t\t};\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Rule from '../../parser/Rule';\n\n/**\n * An identifier is any valid variable name in JavaScript.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('Identifier',\n\t/[a-zA-Z_][\\w\\.]*/\n);\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Deep-merges all of the properties of the objects in `sources` with `target`,\n * modifying the target object and returning it.\n * \n * @param {Object} target\n * @param {...Object} sources\n * @return {Object} The modified target object.\n */\nexport function merge(target = {}, ...sources) {\n\n\tsources.forEach(source => {\n\t\tif (source) {\n\t\t\tObject.keys(source).forEach(key => {\n\t\t\t\tlet targetValue = target[key];\n\t\t\t\tlet sourceValue = source[key];\n\t\t\t\ttarget[key] = targetValue instanceof Object && sourceValue instanceof Object ?\n\t\t\t\t\tmerge(targetValue, sourceValue) :\n\t\t\t\t\tsourceValue;\n\t\t\t});\n\t\t}\n\t});\n\treturn target;\n}\n\n/**\n * Returns a value from an object via a path string that describes the nesting\n * of objects to get to the value.\n * \n * eg:\n * \n * ```\n * let object = {\n *   greeting: {\n *     message: 'Hello!'\n *   }\n * };\n * let pathToMessage = 'greeting.message';\n * ```\n * \n * @param {Object} object\n * @param {String} path A dot-separated string of paths to get to the desired\n *   value within the object\n * @return {Object} The value at the given path within the object, or\n *   `undefined` if the path doesn't resolve within the object.\n */\nexport function navigate(object, path) {\n\n\treturn path.split('.').reduce((previousValue, pathToken) => {\n\t\treturn previousValue && previousValue[pathToken];\n\t}, object);\n}\n","/*\n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Identifier         from './Identifier';\nimport Rule               from '../../parser/Rule';\nimport SequenceExpression from '../../parser/SequenceExpression';\n\nimport {navigate} from '@ultraq/object-utils';\n\n/**\n * Variable expressions, `${variable}`.  Represents a value to be retrieved from\n * the current context.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('VariableExpression',\n\tnew SequenceExpression(\n\t\t/\\${/,\n\t\tIdentifier.name,\n\t\t/\\}/\n\t),\n\t([, identifier]) => context => {\n\t\tlet result = navigate(context, identifier);\n\t\treturn result !== null && result !== undefined ? result : '';\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Identifier         from './Identifier';\nimport VariableExpression from './VariableExpression';\nimport Rule               from '../../parser/Rule';\nimport SequenceExpression from '../../parser/SequenceExpression';\n\n/**\n * Iteration, `localVar : ${collection}`.  The name of the variable for each\n * loop, followed by the collection being iterated over.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('Iteration',\n\tnew SequenceExpression(\n\t\tIdentifier.name,\n\t\t/:/,\n\t\tVariableExpression.name\n\t),\n\t([localValueName, , collectionExpressionAction]) => context => {\n\t\treturn {\n\t\t\tlocalValueName,\n\t\t\titerable: collectionExpressionAction(context)\n\t\t};\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wrapper around the string being parsed, with a position that keeps track of\n * what part of the imput is currently being read/tested.\n * \n * @author Emanuel Rabina\n */\nexport default class InputBuffer {\n\n\t/**\n\t * @private\n\t * @type {Number}\n\t */\n\tposition = 0;\n\n\t/**\n\t * @private\n\t * @type {Array<Number>}\n\t */\n\tpositionStack = [];\n\n\t/**\n\t * @param {String} input\n\t */\n\tconstructor(input) {\n\n\t\tthis.input = input;\n\t}\n\n\t/**\n\t * Clear the previously {@link #mark}ed position.\n\t */\n\tclear() {\n\n\t\tlet lastPosition = this.positionStack.pop();\n\t\tif (lastPosition === undefined) {\n\t\t\tthrow new Error('Called clear() but no matching mark()');\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether or not the current position is at the end of the input,\n\t * meaning we've exhausted the entire input string.\n\t * \n\t * @return {Boolean}\n\t */\n\texhausted() {\n\n\t\treturn this.position === this.input.length;\n\t}\n\n\t/**\n\t * Sets a mark at the current position so that it can be returned to by a\n\t * matching {@link #reset} call.\n\t */\n\tmark() {\n\n\t\tthis.positionStack.push(this.position);\n\t}\n\n\t/**\n\t * Convenience method for surrounding a function with a call to {@link #mark},\n\t * then {@link #clear} if the result of the function is non-null, or\n\t * {@link #reset} if `null`.\n\t * \n\t * @template T\n\t * @param {Function<T>} func\n\t * @return {T}\n\t */\n\tmarkAndClearOrReset(func) {\n\n\t\tthis.mark();\n\t\tlet result = func();\n\t\tif (result !== null) {\n\t\t\tthis.clear();\n\t\t\treturn result;\n\t\t}\n\t\tthis.reset();\n\t\treturn null;\n\t}\n\n\t/**\n\t * Reads as many characters from the current position as satisfies the given\n\t * pattern, returning the read characters and advancing the mark by as many\n\t * characters.\n\t * \n\t * @param {RegExp} pattern\n\t * @return {Array} The array of matched strings, or `null` if the pattern\n\t *   didn't match.\n\t */\n\tread(pattern) {\n\n\t\tlet remaining = this.input.substring(this.position);\n\t\tlet leadingWhitespace = remaining.match(/^\\s+/);\n\t\tif (leadingWhitespace) {\n\t\t\tleadingWhitespace = leadingWhitespace[0];\n\t\t\tremaining = remaining.substring(leadingWhitespace.length);\n\t\t}\n\t\tlet result = new RegExp(pattern.source).exec(remaining);\n\t\tif (result) {\n\t\t\tlet [value] = result;\n\t\t\tif (remaining.startsWith(value)) {\n\t\t\t\tthis.position += (value.length + (leadingWhitespace ? leadingWhitespace.length : 0));\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Revert to the last @{link #mark}ed position.\n\t */\n\treset() {\n\n\t\tlet newPosition = this.positionStack.pop();\n\t\tif (newPosition === undefined) {\n\t\t\tthrow new Error('Called reset() but no matching mark()');\n\t\t}\n\t\tthis.position = newPosition;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport InputBuffer from './InputBuffer';\n\n/**\n * A special kind of expression that understands matched portions of regular\n * expressions to run processing over, which may lead to additional parsing\n * expressions.\n * \n * This expression should be used sparingly as the regexes within need to take\n * care of whitespace between tokens themselves, which can be annoying.\n * \n * @author Emanuel Rabina\n */\nexport default class RegularExpressionMatchProcessor {\n\n\t/**\n\t * Create a new match processor where each function in the list of processors\n\t * is what is run for the corresponding matching group in the expression.  eg:\n\t * Expression matching group 0 executes processors[0].\n\t * \n\t * @param {RegExp} expression\n\t * @param {Array<Matchable>} matchers\n\t */\n\tconstructor(expression, matchers) {\n\n\t\tthis.expression = expression;\n\t\tthis.matchers   = matchers;\n\t}\n\n\t/**\n\t * Match the regular expression to the current input.  A succesful match is\n\t * only if the entire regular expression matches the remaining input.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Parser} parser\n\t * @return {Object}\n\t */\n\tmatch(input, parser) {\n\n\t\treturn input.markAndClearOrReset(() => {\n\t\t\tlet result = input.read(this.expression);\n\t\t\tif (result) {\n\t\t\t\tlet parseResults = [result[0]];\n\t\t\t\tfor (let i = 1; i < result.length; i++) {\n\t\t\t\t\tlet match = result[i];\n\t\t\t\t\tif (match !== undefined) {\n\t\t\t\t\t\tlet parseResult = parser.parseWithExpression(new InputBuffer(match), this.matchers[i - 1]);\n\t\t\t\t\t\tif (parseResult === null) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparseResults.push(parseResult);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn parseResults;\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Flattens an arrays of arrays into a single array.\n * \n * @param {Array} array\n * @return {Array} Flattened array.\n */\nexport function flatten(array) {\n\n\treturn array.reduce((accumulator, value) => {\n\t\treturn accumulator.concat(Array.isArray(value) ? flatten(value) : value);\n\t}, []);\n}\n\n/**\n * Creates an array of numbers from the starting value (inclusive) to the end\n * (exclusive), with an optional step (the gap between values).\n * \n * @param {Number} start\n *   The value to start at, the first item in the returned array.\n * @param {Number} end\n *   The value to end with, the last item in the returned array.\n * @param {Number} [step=1]\n *   The increment/gap between values, defaults to 1.\n * @return {Array} An array encompassing the given range.\n */\nexport function range(start, end, step = 1) {\n\n\treturn Array.apply(0, Array(Math.ceil((end - start) / step))).map((empty, index) => index * step + start);\n}\n\n/**\n * Remove and return the first item from `array` that matches the predicate\n * function.\n * \n * @param {Array} array\n * @param {Function} predicate\n *   Invoked with the array item.\n * @return {Object} The matching item, or `null` if no match was found.\n */\nexport function remove(array, predicate) {\n\n\treturn array.find((item, index) => {\n\t\tif (predicate(item)) {\n\t\t\tarray.splice(index, 1);\n\t\t\treturn item;\n\t\t}\n\t});\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpressionProcessor             from './ExpressionProcessor';\nimport RegularExpressionMatchProcessor from '../../parser/RegularExpressionMatchProcessor';\nimport Rule                            from '../../parser/Rule';\n\nimport {remove} from '@ultraq/array-utils';\n\nexport const Url = new Rule('Url',\n\t/.+/\n);\n\nexport const UrlParameters = new Rule('UrlParameters',\n\t/\\((.+)\\)/\n);\n\n/**\n * Link expressions, `@{url(parameters)}`.  Used for generating URLs out of\n * context parameters.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('LinkExpression',\n\tnew RegularExpressionMatchProcessor(\n\t\t/^@\\{(.+?)(\\(.+\\))?\\}$/,\n\t\t[Url.name, UrlParameters.name]\n\t),\n\t([, url, parameters]) => context => {\n\n\t\tif (parameters) {\n\n\t\t\t// TODO: Push this parsing of the parameters list back into the grammar\n\t\t\tlet expressionProcessor = new ExpressionProcessor(context);\n\t\t\tlet paramsList = parameters.slice(1, -1).split(',').map(param => {\n\t\t\t\tlet [lhs, rhs] = param.split('=');\n\t\t\t\treturn [lhs, expressionProcessor.process(rhs)];\n\t\t\t});\n\n\t\t\t// Fill out any placeholders in the URL from the parameters\n\t\t\twhile (true) { // eslint-disable-line\n\t\t\t\tlet urlTemplate = /(.*?)\\{(.+?)\\}(.*)/.exec(url);\n\t\t\t\tif (urlTemplate) {\n\t\t\t\t\tlet [, head, placeholder, tail] = urlTemplate;\n\t\t\t\t\tlet paramEntry = remove(paramsList, ([lhs]) => lhs === placeholder);\n\t\t\t\t\tif (paramEntry) {\n\t\t\t\t\t\turl = `${head}${paramEntry[1]}${tail}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remaining parameters become search query parameters\n\t\t\tif (paramsList.length) {\n\t\t\t\turl += `?${paramsList.map(([key, value]) => `${key}=${value}`).join('&')}`;\n\t\t\t}\n\t\t}\n\t\treturn url;\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Rule from '../../../parser/Rule';\n\n/**\n * One of `true` or `false`.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('BooleanLiteral',\n\t/(true|false)/,\n\tresult => () => {\n\t\treturn result === 'true';\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Rule from '../../../parser/Rule';\n\n/**\n * The word `null` to represent the null value.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('NullLiteral',\n\t/null/,\n\t() => () => {\n\t\treturn null; // TODO: The parser uses null to mean 'failed parse', so this might not work?\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Rule from '../../../parser/Rule';\n\n/**\n * A number.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('NumberLiteral',\n\t/\\d+(\\.\\d+)?/,\n\tresult => () => {\n\t\treturn parseFloat(result);\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Rule from '../../../parser/Rule';\n\n/**\n * String literal, characters surrounded by `'` (single quotes).\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('StringLiteral',\n\t/'.*?'/,\n\tresult => () => {\n\t\treturn result.slice(1, -1);\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Rule from '../../../parser/Rule';\n\n/**\n * A token literal, which is pretty much anything else that can't be categorized\n * by the other literal types.  This is often used as a fallback in the\n * expression language so that, for any unknown input, we're still returning\n * something.\n * \n * TODO: Is this the same as an Identifier?\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('TokenLiteral',\n\t/[^: $\\{\\}]+/,\n\tresult => () => {\n\t\treturn result;\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ordered choice expression contains many expressions, only one of which can\n * match in order to consider the expression a match.\n * \n * @author Emanuel Rabina\n */\nexport default class OrderedChoiceExpression {\n\n\t/**\n\t * @param {...Matchable} expressions\n\t */\n\tconstructor(...expressions) {\n\n\t\tthis.expressions = expressions;\n\t}\n\n\t/**\n\t * Go through each expression until a match is found.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Parser} parser\n\t * @return {Object}\n\t */\n\tmatch(input, parser) {\n\n\t\treturn input.markAndClearOrReset(() => {\n\t\t\tfor (let expression of this.expressions) {\n\t\t\t\tlet result = input.markAndClearOrReset(() => {\n\t\t\t\t\treturn parser.parseWithExpression(input, expression);\n\t\t\t\t});\n\t\t\t\tif (result !== null) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport BooleanLiteral          from './BooleanLiteral';\nimport NullLiteral             from './NullLiteral';\nimport NumberLiteral           from './NumberLiteral';\nimport StringLiteral           from './StringLiteral';\nimport TokenLiteral            from './TokenLiteral';\nimport OrderedChoiceExpression from '../../../parser/OrderedChoiceExpression';\nimport Rule                    from '../../../parser/Rule';\n\n/**\n * General literal, groups all other literals into an ordered choice so that one\n * of the proper literals is matched.  Used by other rules so that they don't\n * need to include all of the proper literals.\n */\nexport default new Rule('Literal',\n\tnew OrderedChoiceExpression(\n\t\tStringLiteral.name,\n\t\tNumberLiteral.name,\n\t\tBooleanLiteral.name,\n\t\tNullLiteral.name,\n\t\tTokenLiteral.name\n\t)\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Literal                 from './Literal';\nimport VariableExpression      from '../VariableExpression';\nimport OrderedChoiceExpression from '../../../parser/OrderedChoiceExpression';\nimport Rule                    from '../../../parser/Rule';\n\n/**\n * An operand is either a variable or a literal.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('Operand',\n\tnew OrderedChoiceExpression(\n\t\tVariableExpression.name,\n\t\tLiteral.name\n\t)\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Operand                 from './core/Operand';\nimport Rule                    from '../../parser/Rule';\nimport SequenceExpression      from '../../parser/SequenceExpression';\nimport OrderedChoiceExpression from '../../parser/OrderedChoiceExpression';\n\nexport const Comparator = new Rule('Comparator',\n\tnew OrderedChoiceExpression(\n\t\t/===?/\n\t)\n);\n\n/**\n * A logical expression is any expression that resolves in a `true`/`false`\n * value.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('LogicalExpression',\n\tnew SequenceExpression(\n\t\tOperand.name,\n\t\tComparator.name,\n\t\tOperand.name\n\t),\n\t([leftOperand, comparator, rightOperand]) => context => {\n\t\tlet lhs = leftOperand(context);\n\t\tlet rhs = rightOperand(context);\n\t\tswitch (comparator) {\n\t\t\tcase '==':  return lhs == rhs;\n\t\t\tcase '===': return lhs === rhs;\n\t\t}\n\t\treturn false;\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Rule from '../../parser/Rule';\n\n/**\n * An expression that matches the empty string.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('Nothing',\n\t/^$/\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LogicalExpression       from '../LogicalExpression';\nimport Operand                 from '../core/Operand';\nimport OrderedChoiceExpression from '../../../parser/OrderedChoiceExpression';\nimport Rule                    from '../../../parser/Rule';\n\n/**\n * A condition is some expression or value that resolves to a true/false value.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('Condition',\n\tnew OrderedChoiceExpression(\n\t\tLogicalExpression.name,\n\t\tOperand.name\n\t)\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Condition          from './Condition';\nimport Operand            from '../core/Operand';\nimport Rule               from '../../../parser/Rule';\nimport SequenceExpression from '../../../parser/SequenceExpression';\n\n/**\n * If-then condition, `if ? then`.  This is the truthy branch only of the\n * classic ternary operator.  The falsey branch is a no-op.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('IfThenCondition',\n\tnew SequenceExpression(\n\t\tCondition.name,\n\t\t/\\?/,\n\t\tOperand.name\n\t),\n\t([condition, , truthyExpression]) => context => {\n\t\treturn condition(context) ? truthyExpression(context) : undefined;\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Condition          from './Condition';\nimport Operand            from '../core/Operand';\nimport Rule               from '../../../parser/Rule';\nimport SequenceExpression from '../../../parser/SequenceExpression';\n\n/**\n * If-then-else condition, `if ? then : else`, the classic ternary operator.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('IfThenElseCondition',\n\tnew SequenceExpression(\n\t\tCondition.name,\n\t\t/\\?/,\n\t\tOperand.name,\n\t\t/:/,\n\t\tOperand.name\n\t),\n\t([condition, , truthyExpression, , falseyExpression]) => context => {\n\t\treturn condition(context) ? truthyExpression(context) : falseyExpression(context);\n\t}\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FragmentExpression      from './FragmentExpression';\nimport Iteration               from './Iteration';\nimport LinkExpression          from './LinkExpression';\nimport LogicalExpression       from './LogicalExpression';\nimport Nothing                 from './Nothing';\nimport VariableExpression      from './VariableExpression';\nimport IfThenCondition         from './conditionals/IfThenCondition';\nimport IfThenElseCondition     from './conditionals/IfThenElseCondition';\nimport Literal                 from './core/Literal';\nimport OrderedChoiceExpression from '../../parser/OrderedChoiceExpression';\nimport Rule                    from '../../parser/Rule';\n\n/**\n * A special kind of expression that requires the referenced rule consume all\n * available input.\n */\nclass AllInputExpression {\n\tconstructor(ruleName) {\n\t\tthis.ruleName = ruleName;\n\t}\n\tmatch(input, parser) {\n\t\tlet matchResult = parser.parseWithExpression(input, this.ruleName);\n\t\treturn matchResult !== null && input.exhausted() ? matchResult : null;\n\t}\n}\n\n/**\n * Top-level rule for the Thymeleaf expression language, attempts to pick out\n * the type of underlying expression that consumes all of the available input.\n * \n * @author Emanuel Rabina\n */\nexport default new Rule('ThymeleafExpression',\n\tnew OrderedChoiceExpression(\n\t\tnew AllInputExpression(VariableExpression.name),\n\t\tnew AllInputExpression(LinkExpression.name),\n\t\tnew AllInputExpression(FragmentExpression.name),\n\t\tnew AllInputExpression(Iteration.name),\n\t\tnew AllInputExpression(IfThenCondition.name),\n\t\tnew AllInputExpression(Literal.name),\n\t\tnew AllInputExpression(LogicalExpression.name),\n\t\tnew AllInputExpression(IfThenCondition.name),\n\t\tnew AllInputExpression(IfThenElseCondition.name),\n\t\tnew AllInputExpression(Nothing.name)\n\t)\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A collection of Rules that describes a language.\n * \n * @author Emanuel Rabina\n */\nexport default class Grammar {\n\n\t/**\n\t * @param {String} name\n\t * @param {Rule} startingRule\n\t * @param {...Rule} additionalRules\n\t */\n\tconstructor(name, startingRule, ...additionalRules) {\n\n\t\tthis.name = name;\n\t\tthis.rules = [].concat(startingRule, additionalRules);\n\t}\n\n\t/**\n\t * Given an input string and a parser, return whether or not the input is\n\t * accepted by this grammar.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Parser} parser\n\t * @return {Object} If the input is accepted, this will be the non-null result\n\t *   of matching against the rules of this grammar.\n\t */\n\taccept(input, parser) {\n\n\t\treturn this.startingRule.accept(input, parser);\n\t}\n\n\t/**\n\t * Return the rule that has the given name.\n\t * \n\t * @param {String} name\n\t * @return {Rule}\n\t */\n\tfindRuleByName(name) {\n\n\t\tlet rule = this.rules.find(rule => rule.name === name);\n\t\tif (!rule) {\n\t\t\tthrow new Error(`Failed to find a rule named \"${name}\" in the grammar`);\n\t\t}\n\t\treturn rule;\n\t}\n\n\t/**\n\t * Returns the grammar's starting rule.\n\t * \n\t * @return {Rule}\n\t */\n\tget startingRule() {\n\n\t\treturn this.rules[0];\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FragmentExpression, {\n\tFragmentName,\n\tFragmentParameters,\n\tTemplateName}            from './FragmentExpression';\nimport Identifier          from './Identifier';\nimport Iteration           from './Iteration';\nimport LinkExpression, {\n\tUrl, UrlParameters}      from './LinkExpression';\nimport LogicalExpression, {\n\tComparator}              from './LogicalExpression';\nimport Nothing             from './Nothing';\nimport ThymeleafExpression from './ThymeleafExpression';\nimport VariableExpression  from './VariableExpression';\nimport Condition           from './conditionals/Condition';\nimport IfThenCondition     from './conditionals/IfThenCondition';\nimport IfThenElseCondition from './conditionals/IfThenElseCondition';\nimport BooleanLiteral      from './core/BooleanLiteral';\nimport Literal             from './core/Literal';\nimport NullLiteral         from './core/NullLiteral';\nimport NumberLiteral       from './core/NumberLiteral';\nimport Operand             from './core/Operand';\nimport StringLiteral       from './core/StringLiteral';\nimport TokenLiteral        from './core/TokenLiteral';\nimport Grammar             from '../../parser/Grammar';\n\n/**\n * Grammar for the Thymeleaf expression language.  Describes the language and\n * how to parse it.\n * \n * @author Emanuel Rabina\n */\nexport default new Grammar('Thymeleaf Expression Language',\n\tThymeleafExpression,\n\n\t// Ordered as at https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#standard-expression-syntax\n\n\t// Simple expressions\n\tVariableExpression,\n\tLinkExpression,\n\t\tUrl,\n\t\tUrlParameters,\n\tFragmentExpression,\n\t\tTemplateName,\n\t\tFragmentName,\n\t\tFragmentParameters,\n\n\t// Complex expressions\n\tIteration,\n\n\t// Literals\n\tLiteral,\n\t\tStringLiteral,\n\t\tNumberLiteral,\n\t\tBooleanLiteral,\n\t\tNullLiteral,\n\t\tTokenLiteral,\n\n\t// Text operations\n\n\t// Arithmetic operations\n\n\t// Boolean operations\n\n\t// Comparisons and equality\n\tLogicalExpression,\n\t\tComparator,\n\n\t// Conditional operators\n\tIfThenCondition,\n\tIfThenElseCondition,\n\t\tCondition,\n\n\t// Special tokens\n\tNothing,\n\n\t// Common language basics\n\tIdentifier,\n\tOperand\n);\n","/*\n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport InputBuffer from './InputBuffer';\n\n/**\n * Any one of the objects that can be matched:\n *  - an expression\n *  - a string that references another rule\n *  - a regular expression\n * \n * @typedef {Object} Matchable\n * @function match\n */\n\n/**\n * A recursive descent parser for any parsing expression grammar defined by the\n * constructs in this module.\n * \n * TODO: Own module?\n * \n * @author Emanuel Rabina\n */\nexport default class Parser {\n\n\t/**\n\t * @param {Grammar} grammar\n\t */\n\tconstructor(grammar) {\n\n\t\tthis.grammar = grammar;\n\t}\n\n\t/**\n\t * Parse a string, attempting to build the parse tree defined by the rules in\n\t * the configured grammar.  Parsing is considered successful when there are no\n\t * more non-terminating symbols in the grammar and all of the input has been\n\t * read.\n\t * \n\t * @param {String} input\n\t * @return {Object} The parse tree if the input could be parsed, `null`\n\t *   otherwise.\n\t */\n\tparse(input) {\n\n\t\tlet inputBuffer = new InputBuffer(input);\n\t\tlet matchResult = this.grammar.accept(inputBuffer, this);\n\t\tif (matchResult === null || !inputBuffer.exhausted()) {\n\t\t\tlet errorMessage = `Failed to parse \"${input}\"`;\n\n\t\t\t// Don't bring down the thread if we can't parse\n\t\t\tif (process.env.NODE_ENV === 'production') {\n\t\t\t\tconsole.error(errorMessage);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\t\t}\n\t\treturn matchResult;\n\t}\n\n\t/**\n\t * Parse the input against the given expression.  An expression can either be\n\t * a reference to another rule in the current grammar, or a regular expression\n\t * that consumes input.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Matchable} expression\n\t * @return {Object}\n\t */\n\tparseWithExpression(input, expression) {\n\n\t\t// Name of another rule in the grammar\n\t\tif (typeof expression === 'string') {\n\t\t\tlet rule = this.grammar.findRuleByName(expression);\n\t\t\treturn rule ? rule.accept(input, this) : null;\n\t\t}\n\n\t\t// A regular expression that must be matched\n\t\telse if (expression instanceof RegExp) {\n\t\t\tlet result = input.read(expression);\n\t\t\tif (result) {\n\t\t\t\treturn result[0];\n\t\t\t}\n\t\t}\n\n\t\t// One of our expression objects that has a `match` method\n\t\telse if (typeof expression === 'object' && typeof expression.match === 'function') {\n\t\t\treturn expression.match(input, this);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ThymeleafExpressionLanguage from './ThymeleafExpressionLanguage';\nimport Parser                      from '../../parser/Parser';\n\n/**\n * Parses and executes Thymeleaf expressions.\n * \n * TODO: Create a shared instance of this for a processing context so that it\n *       doesn't need to be recreated over and over.\n * \n * @author Emanuel Rabina\n */\nexport default class ExpressionProcessor {\n\n\t/**\n\t * @param {Object} context\n\t */\n\tconstructor(context = {}) {\n\n\t\tthis.context = context;\n\t}\n\n\t/**\n\t * Parse and execute the given input as a Thymeleaf expression.\n\t * \n\t * @param {String} input\n\t * @return {*}\n\t */\n\tprocess(input) {\n\n\t\t// TODO: Probably don't need to create a new parser every time?\n\t\tlet parser = new Parser(ThymeleafExpressionLanguage);\n\t\tlet expressionAction = parser.parse(input);\n\t\treturn expressionAction ? expressionAction(this.context) : null;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common class for attribute processors.\n * \n * TODO: Do we even need a class for processors?  So far they all seem to be\n *       functions that execute based on a name match, which for all intents can\n *       be as simple as an object name/function pair!\n * \n * @author Emanuel Rabina\n */\nexport default class AttributeProcessor {\n\n\t/**\n\t * Constructor, sets this processor's prefix and name.\n\t * \n\t * @param {String} prefix\n\t * @param {String} name\n\t */\n\tconstructor(prefix, name) {\n\n\t\tthis.prefix = prefix;\n\t\tthis.name   = name;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Escapes special HTML characters in a string with their entity code\n * equivalents.\n * \n * @param {String} string\n * @return {String}\n *   HTML escaped string, safe for use in HTML.\n */\nexport function escapeHtml(string) {\n\n\treturn typeof string !== 'string' ? string : string\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;')\n\t\t.replace(/'/g, '&#039;');\n}\n\n/**\n * Returns the replacement of each placeholder in a template string with a\n * corresponding replacement value.\n * \n * @param {String} template\n * @param {...String} values\n *   Argument list of values or a single array of values.\n * @return {String}\n *   Replaced template string.\n */\nexport function format(template, ...values) {\n\n\treturn template.replace(/\\{(\\d+)\\}/g, (match, index) => values[+index] + '');\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpressionProcessor from '../expressions/ExpressionProcessor';\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\n\nimport {escapeHtml} from '@ultraq/string-utils';\n\n/**\n * JS equivalent of Thymeleaf's `th:attr` attribute processor, modifies or sets\n * a target attribute to whatever its associated expression evaluates to.\n * \n * @author Emanuel Rabina\n */\nexport default class AttrAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'attr';\n\n\t/**\n\t * Constructor, set this processor to use the `attr` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, AttrAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:attr` or `data-th-attr` attribute\n\t * on it, picking out the target attributes and setting them to whatever their\n\t * expressions evaluate to.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\t// TODO: This regex, is this some kind of value list that needs to be\n\t\t//       turned into an expression?\n\t\tif (/(.+=.+,)*.+=.+/.test(attributeValue)) {\n\t\t\tattributeValue.split(',').forEach(attribute => {\n\t\t\t\tlet attributeParts = attribute.split('=');\n\t\t\t\telement.setAttribute(attributeParts[0], escapeHtml(new ExpressionProcessor(context).process(attributeParts[1])));\n\t\t\t});\n\t\t}\n\t\t/* istanbul ignore next */\n\t\telse if (process.env.NODE_ENV !== 'test') {\n\t\t\tconsole.warn(`Value to ${attribute}, ${attributeValue}, doesn't seem to contain an attribute assignment expression.  Ignoring.`);\n\t\t}\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpressionProcessor from '../expressions/ExpressionProcessor';\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\n\n/**\n * Thymeleaf's `th:checked` attribute processor, sets or removes the `checked`\n * attribute from an element based on the result of the expression within it.\n * \n * TODO: This is one of HTML5s \"boolean attributes\", attributes whose values are\n *       true simply by being present in the element, regardless of the value\n *       inside it.  To act as false, the attribute has to be removed.  Find a\n *       way to generate these from some list of boolean attributes so that I\n *       don't need to write a class for each one!\n * \n * @author Emanuel Rabina\n */\nexport default class CheckedAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'checked';\n\n\t/**\n\t * Constructor, set this processor to use the `checked` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, CheckedAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:checked` or `data-th-checked`\n\t * attribute on it, either setting or removing a `checked` attribute to the\n\t * current element based on the result of the inner expression.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet result = new ExpressionProcessor(context).process(attributeValue);\n\t\tif (result) {\n\t\t\telement.setAttribute('checked', '');\n\t\t}\n\t\telse {\n\t\t\telement.removeAttribute('checked');\n\t\t}\n\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpressionProcessor from '../expressions/ExpressionProcessor';\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\n\n/**\n * The `th:classappend` is a special attribute that applies the expression to\n * any existing classes already on an element.\n * \n * @author Emanuel Rabina\n */\nexport default class ClassAppendAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'classappend';\n\n\t/**\n\t * Constructor, set this processor to use the `attr` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, ClassAppendAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:classappend` or `data-th-classappend`\n\t * attribute on it, adding the resulting classes to any existing classes on\n\t * the current element.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet classes = new ExpressionProcessor(context).process(attributeValue);\n\t\tif (classes) {\n\t\t\telement.className += ` ${classes}`;\n\t\t}\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpressionProcessor from '../expressions/ExpressionProcessor';\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\n\n/**\n * JS equivalent of Thymeleaf's `th:each` attribute processor, iterates over an\n * [iterable object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols),\n * executing a piece of template for every iteration.\n * \n * @author Emanuel Rabina\n */\nexport default class EachAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'each';\n\n\t/**\n\t * Constructor, set this processor to use the `each` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, EachAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:each`/`data-th-each` attribute,\n\t * repeating the markup for every object in the iterable value.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} Whether or not the parent element needs to do a second\n\t *   pass as its children have been modified by this processor.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.removeAttribute(attribute);\n\n\t\tlet iterationInfo = new ExpressionProcessor(context).process(attributeValue);\n\t\tif (iterationInfo) {\n\t\t\tlet {localValueName, iterable} = iterationInfo;\n\t\t\tlet templateNode = element.cloneNode(true);\n\n\t\t\tfor (let value of iterable) {\n\t\t\t\tlet localClone = templateNode.cloneNode(true);\n\t\t\t\tlet localVariable = {};\n\t\t\t\tlocalVariable[localValueName] = value;\n\n\t\t\t\t// TODO: Standardize this data attribute somewhere.  Shared const?\n\t\t\t\t// element.dataset not yet implemented in JSDOM (https://github.com/tmpvar/jsdom/issues/961),\n\t\t\t\t// so until then we're setting data- attributes the old-fashioned way.\n\t\t\t\tlocalClone.setAttribute('data-thymeleaf-local-variables', JSON.stringify(localVariable));\n\n\t\t\t\telement.parentElement.appendChild(localClone);\n\t\t\t}\n\t\t}\n\t\telement.parentElement.removeChild(element);\n\n\t\treturn true;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpressionProcessor from '../expressions/ExpressionProcessor';\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\n\n/**\n * Configurable attribute processor that sets or empties an attribute value on\n * an element if the result of its expression is truthy or falsey respectively.\n * \n * @author Emanuel Rabina\n */\nexport default class EmptyableAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set the name of the attribute this processor will operate on.\n\t * \n\t * @param {String} prefix\n\t * @param {String} name\n\t */\n\tconstructor(prefix, name) {\n\n\t\tsuper(prefix, name);\n\t}\n\n\t/**\n\t * Processes an element that contains the configured attribute to be worked\n\t * on, setting it if the expression resolves to a truthy value, or removing it\n\t * if it resolves to a falsey value.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet value = new ExpressionProcessor(context).process(attributeValue);\n\t\telement.setAttribute(this.name, value ? value.toString() : '');\n\t\telement.removeAttribute(attribute);\n\t}\n}\n\nexport const EMPTYABLE_ATTRIBUTE_NAMES = [\n\t'href',\n\t'src',\n\t'value'\n];\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor';\n\n/**\n * JS equivalent of Thymeleaf's `th:fragment` attribute processor, marks an\n * element as a template fragment that can be imported by other processors like\n * `th:insert`.\n * \n * @author Emanuel Rabina\n */\nexport default class FragmentAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'fragment';\n\n\t/**\n\t * Constructor, set this processor to use the `fragment` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, FragmentAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:fragment` or `data-th-fragment`\n\t * attribute on it.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.removeAttribute(attribute);\n\n\t\t// TODO: Some off-context mechanism for encountered fragments?\n\t\tif (!context.fragments) {\n\t\t\tcontext.fragments = [];\n\t\t}\n\t\tcontext.fragments.push({\n\t\t\tname:    attributeValue,\n\t\t\telement: element.cloneNode(true)\n\t\t});\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* global ENVIRONMENT */\n\n/**\n * Removes all of an element's child nodes.\n * \n * @param {Element} element\n */\nexport function clearChildren(element) {\n\n\twhile (element.firstChild) {\n\t\telement.removeChild(element.firstChild);\n\t}\n}\n\n/**\n * Sets a Thymeleaf attribute and value on an existing element.  Used primarily\n * in tests.\n * \n * @param {Element} element\n * @param {String} attribute\n * @param {String} value\n * @return {Element} The same element but with the attribute and value set on it.\n */\nexport function createThymeleafAttributeValue(element, attribute, value) {\n\n\telement.setAttribute(attribute, value);\n\treturn element;\n}\n\n/**\n * Use either JSDOM or the browser's native DOM parsing to deserialize the HTML\n * string into a document fragment.\n * \n * @param {String} htmlString\n * @return {DocumentFragment}\n */\nexport function deserialize(htmlString) {\n\n\treturn ENVIRONMENT === 'browser' ?\n\t\t/* istanbul ignore next */\n\t\tdocument.createRange().createContextualFragment(htmlString) :\n\t\trequire('jsdom').jsdom(htmlString, {\n\t\t\tfeatures: {\n\t\t\t\tFetchExternalResources: false,\n\t\t\t\tProcessExternalResources: false\n\t\t\t}\n\t\t});\n}\n\n/**\n * Use either JSDOM or the browser's native DOM serialization to serialize a\n * document fragment into an HTML string.\n * \n * @param {DocumentFragment} documentFragment\n * @return {String}\n */\nexport function serialize(documentFragment) {\n\n\treturn ENVIRONMENT === 'browser' ?\n\t\t/* istanbul ignore next */\n\t\tnew XMLSerializer().serializeToString(documentFragment) :\n\t\trequire('jsdom').serializeDocument(documentFragment);\n}\n\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpressionProcessor from '../expressions/ExpressionProcessor';\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\nimport {clearChildren}     from '../../utilities/Dom';\n\n/**\n * JS equivalent of Thymeleaf's `th:if` attribute processor, includes or\n * excludes the current element and its children from rendering, depending on\n * the evaluation of the expression in the attribute value.\n * \n * @author Emanuel Rabina\n */\nexport default class IfAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'if';\n\n\t/**\n\t * Constructor, set this processor to use the `if` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, IfAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:if` or `data-th-if` attribute\n\t * on it, evaluating the expression for truthy/falsey, rendering/excluding the\n\t * element and its children based on the result.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet expressionResult = new ExpressionProcessor(context).process(attributeValue);\n\t\tif (!expressionResult) {\n\t\t\tclearChildren(element);\n\t\t\telement.parentNode.removeChild(element);\n\t\t}\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","/* \n * Copyright 2015, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function(root, factory) {\n\t'use strict';\n\n\t// AMD\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine('dumb-query-selector', [], factory);\n\t}\n\t// CommonJS\n\telse if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory();\n\t}\n\t// Global\n\telse {\n\t\tvar dumbQuerySelector = factory();\n\t\tObject.keys(dumbQuerySelector).forEach(function(key) {\n\t\t\troot[key] = dumbQuerySelector[key];\n\t\t});\n\t}\n})(this, function() {\n\t'use strict';\n\n\treturn {\n\n\t\t/**\n\t\t * An element selector and shortcut for `(document/element).querySelector`.\n\t\t * \n\t\t * @param {String} query\n\t\t * @param {Node} [scope=document]\n\t\t *   The scope to limit the search to for non-ID queries.  Defaults to\n\t\t *   `document` scope.\n\t\t * @return {Element} The matching element, or `null` if no match is found.\n\t\t */\n\t\t$: function(query, scope) {\n\t\t\treturn (scope || document).querySelector(query);\n\t\t},\n\n\t\t/**\n\t\t * An element list selector, returning an array of elements because\n\t\t * `NodeList`s are dumb.\n\t\t * \n\t\t * @param {String} query\n\t\t * @param {Node} [scope=document]\n\t\t *   The scope to limit the search to for non-ID queries.  Defaults to\n\t\t *   `document` scope.\n\t\t * @return {Array} The list of matching elements.\n\t\t */\n\t\t$$: function(query, scope) {\n\t\t\treturn Array.prototype.slice.call((scope || document).querySelectorAll(query));\n\t\t}\n\t};\n});\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FragmentAttributeProcessor from './FragmentAttributeProcessor';\nimport StandardDialect                    from '../StandardDialect';\nimport ExpressionProcessor                from '../expressions/ExpressionProcessor';\nimport AttributeProcessor                 from '../../processors/AttributeProcessor';\nimport {clearChildren, deserialize}       from '../../utilities/Dom';\n\nimport {$} from 'dumb-query-selector';\n\n/**\n * JS equivalent of Thymeleaf's `th:insert` attribute processor, inserts the\n * referenced template fragment as a child of the current element.\n * \n * @author Emanuel Rabina\n */\nexport default class InsertAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'insert';\n\n\t/**\n\t * Constructor, set this processor to use the `insert` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, InsertAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:insert`/`data-th-insert` attribute,\n\t * replacing the current element's children with the DOM in the referenced\n\t * fragment.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Promise<Boolean>} Whether or not the parent element needs to do a\n\t *   second pass as its children have been modified by this processor.\n\t */\n\tasync process(element, attribute, attributeValue, context) {\n\n\t\telement.removeAttribute(attribute);\n\t\tclearChildren(element);\n\n\t\tlet {templateResolver} = context;\n\t\tif (templateResolver) {\n\t\t\tlet fragmentInfo = new ExpressionProcessor(context).process(attributeValue);\n\t\t\tif (fragmentInfo) {\n\t\t\t\tlet {templateName, fragmentName} = fragmentInfo;\n\t\t\t\tlet template = deserialize(await templateResolver(templateName));\n\n\t\t\t\tlet standardDialect = context.dialects.find(dialect => dialect.name === StandardDialect.NAME);\n\t\t\t\tlet dialectPrefix = standardDialect.prefix;\n\t\t\t\tlet fragmentProcessorName = FragmentAttributeProcessor.NAME;\n\t\t\t\tlet fragment =\n\t\t\t\t\t$(`[${dialectPrefix}\\\\:${fragmentProcessorName}^=\"${fragmentName}\"]`, template) ||\n\t\t\t\t\t$(`[data-${dialectPrefix}-${fragmentProcessorName}^=\"${fragmentName}\"`, template);\n\n\t\t\t\telement.appendChild(fragment);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.log(`No template resolver configured, unable to locate fragment via ${attributeValue} processor`);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpressionProcessor from '../expressions/ExpressionProcessor';\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\n\n/**\n * Configurable attribute processor that sets or removes an attribute on an\n * element if the result of its expression is truthy or falsey respectively.\n * \n * @author Emanuel Rabina\n */\nexport default class RemovableAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set the name of the attribute this processor will operate on.\n\t * \n\t * @param {String} prefix\n\t * @param {String} name\n\t */\n\tconstructor(prefix, name) {\n\n\t\tsuper(prefix, name);\n\t}\n\n\t/**\n\t * Processes an element that contains the configured attribute to be worked\n\t * on, setting it if the expression resolves to a truthy value, or removing it\n\t * if it resolves to a falsey value.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet value = new ExpressionProcessor(context).process(attributeValue);\n\t\tif (value) {\n\t\t\telement.setAttribute(this.name, value.toString());\n\t\t}\n\t\telse {\n\t\t\telement.removeAttribute(this.name);\n\t\t}\n\n\t\telement.removeAttribute(attribute);\n\t}\n}\n\nexport const REMOVABLE_ATTRIBUTE_NAMES = [\n\t'class'\n];\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpressionProcessor from '../expressions/ExpressionProcessor';\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\n\n/**\n * JS equivalent of Thymeleaf's `th:text` attribute processor, applies the\n * expression in the attribute value to the text content of the element being\n * processed, escaping any unsafe input.\n * \n * @author Emanuel Rabina\n */\nexport default class TextAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'text';\n\n\t/**\n\t * Constructor, set this processor to use the `text` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, TextAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:text` or `data-th-text` attribute\n\t * on it, taking the text expression in the value and applying it to the text\n\t * content of the element.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.textContent = new ExpressionProcessor(context).process(attributeValue);\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpressionProcessor from '../expressions/ExpressionProcessor';\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\n\n/**\n * JS equivalent of Thymeleaf's `th:utext` attribute processor, applies the\n * expression in the attribute value to the text content of the element being\n * processed.\n * \n * @author Emanuel Rabina\n */\nexport default class UTextAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'utext';\n\n\t/**\n\t * Constructor, set this processor to use the `utext` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, UTextAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:utext` or `data-th-utext`\n\t * attribute on it, taking the text expression in the value and applying it to\n\t * the text content of the element.\n\t *\n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.innerHTML = new ExpressionProcessor(context).process(attributeValue);\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common class for dialects.\n * \n * @author Emanuel Rabina\n */\nexport default class Dialect {\n\n\t/**\n\t * Constructor, sets this dialect's name and prefix.\n\t * \n\t * @param {String} name\n\t * @param {String} prefix\n\t */\n\tconstructor(name, prefix) {\n\n\t\tthis.name   = name;\n\t\tthis.prefix = prefix;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttrAttributeProcessor        from './processors/AttrAttributeProcessor';\nimport CheckedAttributeProcessor     from './processors/CheckedAttributeProcessor';\nimport ClassAppendAttributeProcessor from './processors/ClassAppendAttributeProcessor';\nimport EachAttributeProcessor        from './processors/EachAttributeProcessor';\nimport EmptyableAttributeProcessor,\n\t{EMPTYABLE_ATTRIBUTE_NAMES}        from './processors/EmptyableAttributeProcessor';\nimport FragmentAttributeProcessor    from './processors/FragmentAttributeProcessor';\nimport IfAttributeProcessor          from './processors/IfAttributeProcessor';\nimport InsertAttributeProcessor      from './processors/InsertAttributeProcessor';\nimport RemovableAttributeProcessor,\n\t{REMOVABLE_ATTRIBUTE_NAMES}        from './processors/RemovableAttributeProcessor';\nimport TextAttributeProcessor        from './processors/TextAttributeProcessor';\nimport UTextAttributeProcessor       from './processors/UTextAttributeProcessor';\nimport Dialect                       from '../dialects/Dialect';\n\n/**\n * The out-of-the-box dialect for Thymeleaf, the \"Standard Dialect\".\n * \n * @author Emanuel Rabina\n */\nexport default class StandardDialect extends Dialect {\n\n\tstatic NAME           = 'Standard';\n\tstatic DEFAULT_PREFIX = 'thjs';\n\n\t/**\n\t * Create an instance of this dialect with the name \"Standard\" and\n\t * given prefix, defaulting to \"th\" if not supplied.\n\t * \n\t * @param {String} [prefix='thjs']\n\t */\n\tconstructor(prefix = StandardDialect.DEFAULT_PREFIX) {\n\n\t\tsuper(StandardDialect.NAME, prefix);\n\t}\n\n\t/**\n\t * Returns the supported standard processors.\n\t * \n\t * @return {Array} A list of the processors included in this dialect.\n\t */\n\tget processors() {\n\n\t\t// TODO: This is a very basic way of imposing the order of attribute\n\t\t//       processors.  It's currently ordered in the same way as OG\n\t\t//       Thymeleaf.  Figure out a 'proper' way to do the ordering.\n\n\t\t// Order taken from https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#attribute-precedence\n\t\tlet {prefix} = this;\n\t\treturn [].concat(\n\t\t\t// Fragment inclusion\n\t\t\tnew InsertAttributeProcessor(prefix),\n\n\t\t\t// Fragment iteration\n\t\t\tnew EachAttributeProcessor(prefix),\n\n\t\t\t// Conditional evaluation\n\t\t\tnew IfAttributeProcessor(prefix),\n\n\t\t\t// Local variable definition\n\t\t\tnew AttrAttributeProcessor(prefix),\n\t\t\tnew ClassAppendAttributeProcessor(prefix),\n\n\t\t\t// General attribute modification\n\t\t\tEMPTYABLE_ATTRIBUTE_NAMES.map(attributeName => {\n\t\t\t\treturn new EmptyableAttributeProcessor(prefix, attributeName);\n\t\t\t}),\n\t\t\tREMOVABLE_ATTRIBUTE_NAMES.map(attributeName => {\n\t\t\t\treturn new RemovableAttributeProcessor(prefix, attributeName);\n\t\t\t}),\n\n\t\t\t// Specific attribute modification\n\t\t\tnew CheckedAttributeProcessor(prefix),\n\n\t\t\t// Text\n\t\t\tnew TextAttributeProcessor(prefix),\n\t\t\tnew UTextAttributeProcessor(prefix),\n\n\t\t\t// Fragment specification\n\t\t\tnew FragmentAttributeProcessor(prefix)\n\n\t\t\t// Fragment removal\n\t\t);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StandardDialect from './standard/StandardDialect';\n\n/**\n * Configuration object for the template engine.\n * \n * @typedef {Object} Configuration\n * @property {Array<Dialect>} dialects\n *   A list of dialects to include with this instance of the template engine.\n * @property {Object} [isomorphic]\n *   An object which configures the isomorphic capabilities of the template\n *   engine.\n * @property {Function} templateResolver\n *   A function for returning the text of templates named by fragment\n *   expressions in templates.  Is given only 1 argument, the template name from\n *   a fragment expression, and should return a Promise of the template text.\n */\n\n/**\n * Default configuration for the template engine, configures the standard\n * dialect with no options (uses `thjs` as the prefix).\n * \n * @type {Configuration}\n */\nexport const DEFAULT_CONFIGURATION = {\n\tdialects: [\n\t\tnew StandardDialect()\n\t]\n};\n\n/**\n * Standard configuration, configures the standard dialect with the `th` prefix\n * and enables isomorphic mode which enables the ability to use much of the same\n * processors across original Thymeleaf and ThymeleafJS.\n * \n * @type {Configuration}\n */\nexport const STANDARD_CONFIGURATION = {\n\t...DEFAULT_CONFIGURATION,\n\tdialects: [\n\t\tnew StandardDialect('th')\n\t],\n\tisomorphic: {\n\t\tprefix: 'thjs'\n\t}\n};\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Matcher {\n\n\t/**\n\t * Create a matcher to work with the current context and isomorphic processing\n\t * settings.\n\t * \n\t * @param {Object} context\n\t * @param {Object} isomorphic\n\t */\n\tconstructor(context, isomorphic) {\n\n\t\tthis.context    = context;\n\t\tthis.isomorphic = isomorphic;\n\t}\n\n\t/**\n\t * Return the matching attribute of an element that a processor can work over.\n\t * \n\t * @param {Element} element\n\t * @param {AttributeProcessor} processor\n\t * @return {String}\n\t *   The attribute that matched processing by this processor, or `null` if no\n\t *   match was found.\n\t */\n\tmatches(element, processor) {\n\n\t\tlet prefixes = [].concat(\n\t\t\tthis.isomorphic ? this.isomorphic.prefix : [],\n\t\t\tprocessor.prefix\n\t\t);\n\t\tlet {name} = processor;\n\n\t\tfor (let prefix of prefixes) {\n\t\t\tlet attribute;\n\t\t\tattribute = `${prefix}:${name}`;\n\t\t\tif (element.hasAttribute(attribute)) {\n\t\t\t\treturn attribute;\n\t\t\t}\n\t\t\tattribute = `data-${prefix}-${name}`;\n\t\t\tif (element.hasAttribute(attribute)) {\n\t\t\t\treturn attribute;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Convert a standard node callback-style function into a function that returns\n * a Promise.\n * \n * @param {Function} func\n * @return {Function}\n */\nexport function promisify(func) {\n\treturn function() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfunc(...arguments, (error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(new Error(error));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DEFAULT_CONFIGURATION}  from './Configurations';\nimport Matcher                  from './processors/Matcher';\nimport StandardDialect          from './standard/StandardDialect';\nimport {promisify}              from './utilities/Functions';\nimport {deserialize, serialize} from './utilities/Dom';\n\nimport {flatten} from '@ultraq/array-utils';\nimport {merge}   from '@ultraq/object-utils';\n\nconst XML_NAMESPACE_ATTRIBUTE = `xmlns:${StandardDialect.DEFAULT_PREFIX}`;\n\n/**\n * A highly-configurable class responsible for processing the Thymeleaf\n * directives found in HTML documents and fragments.\n * \n * @author Emanuel Rabina\n */\nexport default class TemplateEngine {\n\n\t/**\n\t * Constructor, set up a new template engine instance.\n\t * \n\t * @param {Object} config\n\t */\n\tconstructor({dialects, isomorphic, templateResolver} = DEFAULT_CONFIGURATION) {\n\n\t\tthis.dialects         = dialects;\n\t\tthis.isomorphic       = isomorphic;\n\t\tthis.processors       = flatten(dialects.map(dialect => dialect.processors));\n\t\tthis.templateResolver = templateResolver;\n\t}\n\n\t/**\n\t * Process the Thymeleaf template data, returning the processed template.\n\t * \n\t * @param {String} template\n\t * @param {Object} [context={}]\n\t * @return {Promise<String>}\n\t *   A promise resolved with the processed template, or rejected with an error\n\t *   message.\n\t */\n\tprocess(template, context = {}) {\n\n\t\tlet document = deserialize(template);\n\t\tlet rootElement = document.firstElementChild;\n\t\treturn this.processNode(rootElement, {\n\t\t\t...context,\n\t\t\tdialects:         this.dialects,\n\t\t\ttemplateResolver: this.templateResolver\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// TODO: Special case, remove the xmlns:th namespace from the document.\n\t\t\t\t//       This should be handled like in main Thymeleaf where it's just\n\t\t\t\t//       another processor that runs on the document.\n\t\t\t\tif (rootElement.hasAttribute(XML_NAMESPACE_ATTRIBUTE)) {\n\t\t\t\t\trootElement.removeAttribute(XML_NAMESPACE_ATTRIBUTE);\n\t\t\t\t}\n\t\t\t\treturn serialize(document);\n\t\t\t});\n\t}\n\n\t/**\n\t * Process the Thymeleaf template at the given path, returning a promise of the\n\t * processed template.\n\t * \n\t * @param {String} filePath\n\t * @param {Object} [context={}]\n\t * @return {Promise<String>}\n\t *   A promise resolved with the processed template, or rejected with an error\n\t *   message.\n\t */\n\tprocessFile(filePath, context = {}) {\n\n\t\t/* global ENVIRONMENT */\n\t\treturn ENVIRONMENT === 'browser' ?\n\t\t\tPromise.reject(new Error('Cannot use fs.readFile inside a browser')) :\n\t\t\tpromisify(require('fs').readFile)(filePath)\n\t\t\t\t.then(data => {\n\t\t\t\t\treturn this.process(data, context);\n\t\t\t\t});\n\t}\n\n\t/**\n\t * Process a DOM element.\n\t * \n\t * @private\n\t * @param {Element} element\n\t * @param {Object} [context={}]\n\t * @return {Promise<Boolean>} Whether or not the parent node needs reprocessing.\n\t */\n\tasync processNode(element, context = {}) {\n\n\t\t// TODO: Standardize this data attribute somewhere.  Shared const?\n\t\t// element.dataset not yet implemented in JSDOM (https://github.com/tmpvar/jsdom/issues/961),\n\t\t// so until then we're getting data- attributes the old-fashioned way.\n\t\t// Alternatively, some kind of variable stack that pops with each move up\n\t\t// the DOM.\n\t\tlet localVariables = JSON.parse(element.getAttribute('data-thymeleaf-local-variables'));\n\t\telement.removeAttribute('data-thymeleaf-local-variables');\n\t\tlet localContext = merge({}, context, localVariables);\n\t\tlet matcher = new Matcher(context, this.isomorphic);\n\n\t\t// Process the current element, store whether or not reprocessing of the\n\t\t// parent needs to happen before moving on to this element's children.\n\t\tlet requireReprocessing = false;\n\t\tfor (let processor of this.processors) {\n\t\t\tlet attribute = matcher.matches(element, processor);\n\t\t\tlet processorResult = attribute ?\n\t\t\t\tawait processor.process(element, attribute, element.getAttribute(attribute), localContext) :\n\t\t\t\tfalse;\n\t\t\trequireReprocessing = requireReprocessing || processorResult;\n\t\t}\n\n\t\tif (requireReprocessing) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Process this element's children\n\t\tlet reprocess;\n\t\tdo {\n\t\t\treprocess = false;\n\t\t\tfor (let child of element.children) {\n\t\t\t\treprocess = await this.processNode(child, localContext);\n\t\t\t\tif (reprocess) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile (reprocess);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {STANDARD_CONFIGURATION}        from './Configurations';\nexport {default as TemplateEngine}     from './TemplateEngine';\nexport {default as Dialect}            from './dialects/Dialect';\nexport {default as AttributeProcessor} from './processors/AttributeProcessor';\nexport {default as StandardDialect}    from './standard/StandardDialect';\n"],"names":["OptionalExpression","expression","input","parser","markAndClearOrReset","result","parseWithExpression","defaultMatchProcessor","Rule","name","matchProcessor","matchResult","SequenceExpression","expressions","results","push","TemplateName","FragmentName","FragmentParameters","templateName","fragmentName","parameters","context","merge","target","sources","forEach","source","keys","key","targetValue","sourceValue","Object","navigate","object","path","split","reduce","previousValue","pathToken","Identifier","identifier","undefined","VariableExpression","localValueName","collectionExpressionAction","InputBuffer","position","positionStack","lastPosition","pop","Error","length","func","mark","clear","reset","pattern","remaining","substring","leadingWhitespace","match","RegExp","exec","value","startsWith","newPosition","RegularExpressionMatchProcessor","matchers","read","parseResults","i","parseResult","flatten","array","accumulator","concat","Array","isArray","remove","predicate","find","item","index","splice","Url","UrlParameters","url","expressionProcessor","ExpressionProcessor","paramsList","slice","map","param","lhs","rhs","process","urlTemplate","head","placeholder","tail","paramEntry","join","parseFloat","OrderedChoiceExpression","StringLiteral","NumberLiteral","BooleanLiteral","NullLiteral","TokenLiteral","Literal","Comparator","Operand","leftOperand","comparator","rightOperand","LogicalExpression","Condition","condition","truthyExpression","falseyExpression","AllInputExpression","ruleName","exhausted","LinkExpression","FragmentExpression","Iteration","IfThenCondition","IfThenElseCondition","Nothing","Grammar","startingRule","additionalRules","rules","accept","rule","ThymeleafExpression","Parser","grammar","inputBuffer","errorMessage","env","NODE_ENV","error","findRuleByName","ThymeleafExpressionLanguage","expressionAction","parse","AttributeProcessor","prefix","escapeHtml","string","replace","AttrAttributeProcessor","NAME","element","attribute","attributeValue","test","attributeParts","setAttribute","warn","removeAttribute","CheckedAttributeProcessor","ClassAppendAttributeProcessor","classes","className","EachAttributeProcessor","iterationInfo","iterable","templateNode","cloneNode","localClone","localVariable","JSON","stringify","parentElement","appendChild","removeChild","EmptyableAttributeProcessor","toString","EMPTYABLE_ATTRIBUTE_NAMES","FragmentAttributeProcessor","fragments","clearChildren","firstChild","deserialize","htmlString","ENVIRONMENT","require","jsdom","serialize","documentFragment","serializeDocument","IfAttributeProcessor","expressionResult","parentNode","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","module","exports","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","makeInvokeMethod","tryCatch","fn","obj","arg","type","call","err","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","constructor","displayName","defineIteratorMethods","method","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","invoke","resolve","reject","record","Promise","then","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","async","iter","next","done","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reverse","iteratorMethod","isNaN","skipTempReset","prev","charAt","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","Function","g","hadRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","root","factory","define","amd","dumbQuerySelector","this","query","scope","document","querySelector","querySelectorAll","InsertAttributeProcessor","templateResolver","fragmentInfo","dialects","dialect","StandardDialect","standardDialect","$","dialectPrefix","fragmentProcessorName","template","fragment","log","RemovableAttributeProcessor","REMOVABLE_ATTRIBUTE_NAMES","TextAttributeProcessor","textContent","UTextAttributeProcessor","innerHTML","Dialect","DEFAULT_PREFIX","processors","attributeName","DEFAULT_CONFIGURATION","STANDARD_CONFIGURATION","Matcher","isomorphic","processor","prefixes","hasAttribute","promisify","arguments","XML_NAMESPACE_ATTRIBUTE","TemplateEngine","rootElement","firstElementChild","processNode","filePath","readFile","data","getAttribute","localVariables","matcher","matches","localContext","requireReprocessing","processorResult","children","child","reprocess"],"mappings":"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"}